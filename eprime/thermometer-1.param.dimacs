p cnf 211 715                                                                                       

1 0
c Encoding variable: grid_00000_00000 with domain: bool (representing constraint )
c Var 'grid_00000_00000' direct represents '0' with '-2'
c Var 'grid_00000_00000' direct represents '1' with '2'
c Var 'grid_00000_00000' order represents '1' with '1'
c Var 'grid_00000_00000' order represents '0' with '-2'
c Encoding variable: grid_00000_00001 with domain: bool (representing constraint )
c Var 'grid_00000_00001' direct represents '0' with '-3'
c Var 'grid_00000_00001' direct represents '1' with '3'
c Var 'grid_00000_00001' order represents '1' with '1'
c Var 'grid_00000_00001' order represents '0' with '-3'
c Encoding variable: grid_00000_00002 with domain: bool (representing constraint )
c Var 'grid_00000_00002' direct represents '0' with '-4'
c Var 'grid_00000_00002' direct represents '1' with '4'
c Var 'grid_00000_00002' order represents '1' with '1'
c Var 'grid_00000_00002' order represents '0' with '-4'
c Encoding variable: grid_00000_00003 with domain: bool (representing constraint )
c Var 'grid_00000_00003' direct represents '0' with '-5'
c Var 'grid_00000_00003' direct represents '1' with '5'
c Var 'grid_00000_00003' order represents '1' with '1'
c Var 'grid_00000_00003' order represents '0' with '-5'
c Encoding variable: grid_00000_00004 with domain: bool (representing constraint )
c Var 'grid_00000_00004' direct represents '0' with '-6'
c Var 'grid_00000_00004' direct represents '1' with '6'
c Var 'grid_00000_00004' order represents '1' with '1'
c Var 'grid_00000_00004' order represents '0' with '-6'
c Encoding variable: grid_00001_00000 with domain: bool (representing constraint )
c Var 'grid_00001_00000' direct represents '0' with '-7'
c Var 'grid_00001_00000' direct represents '1' with '7'
c Var 'grid_00001_00000' order represents '1' with '1'
c Var 'grid_00001_00000' order represents '0' with '-7'
c Encoding variable: grid_00001_00001 with domain: bool (representing constraint )
c Var 'grid_00001_00001' direct represents '0' with '-8'
c Var 'grid_00001_00001' direct represents '1' with '8'
c Var 'grid_00001_00001' order represents '1' with '1'
c Var 'grid_00001_00001' order represents '0' with '-8'
c Encoding variable: grid_00001_00002 with domain: bool (representing constraint )
c Var 'grid_00001_00002' direct represents '0' with '-9'
c Var 'grid_00001_00002' direct represents '1' with '9'
c Var 'grid_00001_00002' order represents '1' with '1'
c Var 'grid_00001_00002' order represents '0' with '-9'
c Encoding variable: grid_00001_00003 with domain: bool (representing constraint )
c Var 'grid_00001_00003' direct represents '0' with '-10'
c Var 'grid_00001_00003' direct represents '1' with '10'
c Var 'grid_00001_00003' order represents '1' with '1'
c Var 'grid_00001_00003' order represents '0' with '-10'
c Encoding variable: grid_00001_00004 with domain: bool (representing constraint )
c Var 'grid_00001_00004' direct represents '0' with '-11'
c Var 'grid_00001_00004' direct represents '1' with '11'
c Var 'grid_00001_00004' order represents '1' with '1'
c Var 'grid_00001_00004' order represents '0' with '-11'
c Encoding variable: grid_00002_00000 with domain: bool (representing constraint )
c Var 'grid_00002_00000' direct represents '0' with '-12'
c Var 'grid_00002_00000' direct represents '1' with '12'
c Var 'grid_00002_00000' order represents '1' with '1'
c Var 'grid_00002_00000' order represents '0' with '-12'
c Encoding variable: grid_00002_00001 with domain: bool (representing constraint )
c Var 'grid_00002_00001' direct represents '0' with '-13'
c Var 'grid_00002_00001' direct represents '1' with '13'
c Var 'grid_00002_00001' order represents '1' with '1'
c Var 'grid_00002_00001' order represents '0' with '-13'
c Encoding variable: grid_00002_00002 with domain: bool (representing constraint )
c Var 'grid_00002_00002' direct represents '0' with '-14'
c Var 'grid_00002_00002' direct represents '1' with '14'
c Var 'grid_00002_00002' order represents '1' with '1'
c Var 'grid_00002_00002' order represents '0' with '-14'
c Encoding variable: grid_00002_00003 with domain: bool (representing constraint )
c Var 'grid_00002_00003' direct represents '0' with '-15'
c Var 'grid_00002_00003' direct represents '1' with '15'
c Var 'grid_00002_00003' order represents '1' with '1'
c Var 'grid_00002_00003' order represents '0' with '-15'
c Encoding variable: grid_00002_00004 with domain: bool (representing constraint )
c Var 'grid_00002_00004' direct represents '0' with '-16'
c Var 'grid_00002_00004' direct represents '1' with '16'
c Var 'grid_00002_00004' order represents '1' with '1'
c Var 'grid_00002_00004' order represents '0' with '-16'
c Encoding variable: grid_00003_00000 with domain: bool (representing constraint )
c Var 'grid_00003_00000' direct represents '0' with '-17'
c Var 'grid_00003_00000' direct represents '1' with '17'
c Var 'grid_00003_00000' order represents '1' with '1'
c Var 'grid_00003_00000' order represents '0' with '-17'
c Encoding variable: grid_00003_00001 with domain: bool (representing constraint )
c Var 'grid_00003_00001' direct represents '0' with '-18'
c Var 'grid_00003_00001' direct represents '1' with '18'
c Var 'grid_00003_00001' order represents '1' with '1'
c Var 'grid_00003_00001' order represents '0' with '-18'
c Encoding variable: grid_00003_00002 with domain: bool (representing constraint )
c Var 'grid_00003_00002' direct represents '0' with '-19'
c Var 'grid_00003_00002' direct represents '1' with '19'
c Var 'grid_00003_00002' order represents '1' with '1'
c Var 'grid_00003_00002' order represents '0' with '-19'
c Encoding variable: grid_00003_00003 with domain: bool (representing constraint )
c Var 'grid_00003_00003' direct represents '0' with '-20'
c Var 'grid_00003_00003' direct represents '1' with '20'
c Var 'grid_00003_00003' order represents '1' with '1'
c Var 'grid_00003_00003' order represents '0' with '-20'
c Encoding variable: grid_00003_00004 with domain: bool (representing constraint )
c Var 'grid_00003_00004' direct represents '0' with '-21'
c Var 'grid_00003_00004' direct represents '1' with '21'
c Var 'grid_00003_00004' order represents '1' with '1'
c Var 'grid_00003_00004' order represents '0' with '-21'
c Encoding variable: grid_00004_00000 with domain: bool (representing constraint )
c Var 'grid_00004_00000' direct represents '0' with '-22'
c Var 'grid_00004_00000' direct represents '1' with '22'
c Var 'grid_00004_00000' order represents '1' with '1'
c Var 'grid_00004_00000' order represents '0' with '-22'
c Encoding variable: grid_00004_00001 with domain: bool (representing constraint )
c Var 'grid_00004_00001' direct represents '0' with '-23'
c Var 'grid_00004_00001' direct represents '1' with '23'
c Var 'grid_00004_00001' order represents '1' with '1'
c Var 'grid_00004_00001' order represents '0' with '-23'
c Encoding variable: grid_00004_00002 with domain: bool (representing constraint )
c Var 'grid_00004_00002' direct represents '0' with '-24'
c Var 'grid_00004_00002' direct represents '1' with '24'
c Var 'grid_00004_00002' order represents '1' with '1'
c Var 'grid_00004_00002' order represents '0' with '-24'
c Encoding variable: grid_00004_00003 with domain: bool (representing constraint )
c Var 'grid_00004_00003' direct represents '0' with '-25'
c Var 'grid_00004_00003' direct represents '1' with '25'
c Var 'grid_00004_00003' order represents '1' with '1'
c Var 'grid_00004_00003' order represents '0' with '-25'
c Encoding variable: grid_00004_00004 with domain: bool (representing constraint )
c Var 'grid_00004_00004' direct represents '0' with '-26'
c Var 'grid_00004_00004' direct represents '1' with '26'
c Var 'grid_00004_00004' order represents '1' with '1'
c Var 'grid_00004_00004' order represents '0' with '-26'
c Encoding variable: fluid_00000 with domain: bool (representing constraint )
c Var 'fluid_00000' direct represents '0' with '-27'
c Var 'fluid_00000' direct represents '1' with '27'
c Var 'fluid_00000' order represents '1' with '1'
c Var 'fluid_00000' order represents '0' with '-27'
c Encoding variable: fluid_00001 with domain: bool (representing constraint )
c Var 'fluid_00001' direct represents '0' with '-28'
c Var 'fluid_00001' direct represents '1' with '28'
c Var 'fluid_00001' order represents '1' with '1'
c Var 'fluid_00001' order represents '0' with '-28'
c Encoding variable: fluid_00002 with domain: bool (representing constraint )
c Var 'fluid_00002' direct represents '0' with '-29'
c Var 'fluid_00002' direct represents '1' with '29'
c Var 'fluid_00002' order represents '1' with '1'
c Var 'fluid_00002' order represents '0' with '-29'
c Encoding variable: fluid_00003 with domain: bool (representing constraint )
c Var 'fluid_00003' direct represents '0' with '-30'
c Var 'fluid_00003' direct represents '1' with '30'
c Var 'fluid_00003' order represents '1' with '1'
c Var 'fluid_00003' order represents '0' with '-30'
c Encoding variable: fluid_00004 with domain: bool (representing constraint )
c Var 'fluid_00004' direct represents '0' with '-31'
c Var 'fluid_00004' direct represents '1' with '31'
c Var 'fluid_00004' order represents '1' with '1'
c Var 'fluid_00004' order represents '0' with '-31'
c Encoding variable: fluid_00005 with domain: bool (representing constraint )
c Var 'fluid_00005' direct represents '0' with '-32'
c Var 'fluid_00005' direct represents '1' with '32'
c Var 'fluid_00005' order represents '1' with '1'
c Var 'fluid_00005' order represents '0' with '-32'
c Encoding variable: fluid_00006 with domain: bool (representing constraint )
c Var 'fluid_00006' direct represents '0' with '-33'
c Var 'fluid_00006' direct represents '1' with '33'
c Var 'fluid_00006' order represents '1' with '1'
c Var 'fluid_00006' order represents '0' with '-33'
c Encoding variable: fluid_00007 with domain: bool (representing constraint )
c Var 'fluid_00007' direct represents '0' with '-34'
c Var 'fluid_00007' direct represents '1' with '34'
c Var 'fluid_00007' order represents '1' with '1'
c Var 'fluid_00007' order represents '0' with '-34'
c Encoding variable: fluid_00008 with domain: bool (representing constraint )
c Var 'fluid_00008' direct represents '0' with '-35'
c Var 'fluid_00008' direct represents '1' with '35'
c Var 'fluid_00008' order represents '1' with '1'
c Var 'fluid_00008' order represents '0' with '-35'
c Encoding variable: rowup_00000 with domain: bool (representing constraint )
c Var 'rowup_00000' direct represents '0' with '-36'
c Var 'rowup_00000' direct represents '1' with '36'
c Var 'rowup_00000' order represents '1' with '1'
c Var 'rowup_00000' order represents '0' with '-36'
c Encoding variable: rowup_00001 with domain: bool (representing constraint )
c Var 'rowup_00001' direct represents '0' with '-37'
c Var 'rowup_00001' direct represents '1' with '37'
c Var 'rowup_00001' order represents '1' with '1'
c Var 'rowup_00001' order represents '0' with '-37'
c Encoding variable: rowup_00002 with domain: bool (representing constraint )
c Var 'rowup_00002' direct represents '0' with '-38'
c Var 'rowup_00002' direct represents '1' with '38'
c Var 'rowup_00002' order represents '1' with '1'
c Var 'rowup_00002' order represents '0' with '-38'
c Encoding variable: rowup_00003 with domain: bool (representing constraint )
c Var 'rowup_00003' direct represents '0' with '-39'
c Var 'rowup_00003' direct represents '1' with '39'
c Var 'rowup_00003' order represents '1' with '1'
c Var 'rowup_00003' order represents '0' with '-39'
c Encoding variable: rowup_00004 with domain: bool (representing constraint )
c Var 'rowup_00004' direct represents '0' with '-40'
c Var 'rowup_00004' direct represents '1' with '40'
c Var 'rowup_00004' order represents '1' with '1'
c Var 'rowup_00004' order represents '0' with '-40'
c Encoding variable: rowdown_00000 with domain: bool (representing constraint )
c Var 'rowdown_00000' direct represents '0' with '-41'
c Var 'rowdown_00000' direct represents '1' with '41'
c Var 'rowdown_00000' order represents '1' with '1'
c Var 'rowdown_00000' order represents '0' with '-41'
c Encoding variable: rowdown_00001 with domain: bool (representing constraint )
c Var 'rowdown_00001' direct represents '0' with '-42'
c Var 'rowdown_00001' direct represents '1' with '42'
c Var 'rowdown_00001' order represents '1' with '1'
c Var 'rowdown_00001' order represents '0' with '-42'
c Encoding variable: rowdown_00002 with domain: bool (representing constraint )
c Var 'rowdown_00002' direct represents '0' with '-43'
c Var 'rowdown_00002' direct represents '1' with '43'
c Var 'rowdown_00002' order represents '1' with '1'
c Var 'rowdown_00002' order represents '0' with '-43'
c Encoding variable: rowdown_00003 with domain: bool (representing constraint )
c Var 'rowdown_00003' direct represents '0' with '-44'
c Var 'rowdown_00003' direct represents '1' with '44'
c Var 'rowdown_00003' order represents '1' with '1'
c Var 'rowdown_00003' order represents '0' with '-44'
c Encoding variable: rowdown_00004 with domain: bool (representing constraint )
c Var 'rowdown_00004' direct represents '0' with '-45'
c Var 'rowdown_00004' direct represents '1' with '45'
c Var 'rowdown_00004' order represents '1' with '1'
c Var 'rowdown_00004' order represents '0' with '-45'
c Encoding variable: colup_00000 with domain: bool (representing constraint )
c Var 'colup_00000' direct represents '0' with '-46'
c Var 'colup_00000' direct represents '1' with '46'
c Var 'colup_00000' order represents '1' with '1'
c Var 'colup_00000' order represents '0' with '-46'
c Encoding variable: colup_00001 with domain: bool (representing constraint )
c Var 'colup_00001' direct represents '0' with '-47'
c Var 'colup_00001' direct represents '1' with '47'
c Var 'colup_00001' order represents '1' with '1'
c Var 'colup_00001' order represents '0' with '-47'
c Encoding variable: colup_00002 with domain: bool (representing constraint )
c Var 'colup_00002' direct represents '0' with '-48'
c Var 'colup_00002' direct represents '1' with '48'
c Var 'colup_00002' order represents '1' with '1'
c Var 'colup_00002' order represents '0' with '-48'
c Encoding variable: colup_00003 with domain: bool (representing constraint )
c Var 'colup_00003' direct represents '0' with '-49'
c Var 'colup_00003' direct represents '1' with '49'
c Var 'colup_00003' order represents '1' with '1'
c Var 'colup_00003' order represents '0' with '-49'
c Encoding variable: colup_00004 with domain: bool (representing constraint )
c Var 'colup_00004' direct represents '0' with '-50'
c Var 'colup_00004' direct represents '1' with '50'
c Var 'colup_00004' order represents '1' with '1'
c Var 'colup_00004' order represents '0' with '-50'
c Encoding variable: coldown_00000 with domain: bool (representing constraint )
c Var 'coldown_00000' direct represents '0' with '-51'
c Var 'coldown_00000' direct represents '1' with '51'
c Var 'coldown_00000' order represents '1' with '1'
c Var 'coldown_00000' order represents '0' with '-51'
c Encoding variable: coldown_00001 with domain: bool (representing constraint )
c Var 'coldown_00001' direct represents '0' with '-52'
c Var 'coldown_00001' direct represents '1' with '52'
c Var 'coldown_00001' order represents '1' with '1'
c Var 'coldown_00001' order represents '0' with '-52'
c Encoding variable: coldown_00002 with domain: bool (representing constraint )
c Var 'coldown_00002' direct represents '0' with '-53'
c Var 'coldown_00002' direct represents '1' with '53'
c Var 'coldown_00002' order represents '1' with '1'
c Var 'coldown_00002' order represents '0' with '-53'
c Encoding variable: coldown_00003 with domain: bool (representing constraint )
c Var 'coldown_00003' direct represents '0' with '-54'
c Var 'coldown_00003' direct represents '1' with '54'
c Var 'coldown_00003' order represents '1' with '1'
c Var 'coldown_00003' order represents '0' with '-54'
c Encoding variable: coldown_00004 with domain: bool (representing constraint )
c Var 'coldown_00004' direct represents '0' with '-55'
c Var 'coldown_00004' direct represents '1' with '55'
c Var 'coldown_00004' order represents '1' with '1'
c Var 'coldown_00004' order represents '0' with '-55'
c Encoding variable: aux0 with domain: bool (representing constraint (3<=((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003) + (0<grid_00000_00004))))
c Var 'aux0' direct represents '0' with '-56'
c Var 'aux0' direct represents '1' with '56'
c Var 'aux0' order represents '1' with '1'
c Var 'aux0' order represents '0' with '-56'
c Encoding variable: aux1 with domain: bool (representing constraint (4<=((0<grid_00001_00000) + (0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003) + (0<grid_00001_00004))))
c Var 'aux1' direct represents '0' with '-57'
c Var 'aux1' direct represents '1' with '57'
c Var 'aux1' order represents '1' with '1'
c Var 'aux1' order represents '0' with '-57'
c Encoding variable: aux2 with domain: bool (representing constraint (2<=((0<grid_00002_00000) + (0<grid_00002_00001) + (0<grid_00002_00002) + (0<grid_00002_00003) + (0<grid_00002_00004))))
c Var 'aux2' direct represents '0' with '-58'
c Var 'aux2' direct represents '1' with '58'
c Var 'aux2' order represents '1' with '1'
c Var 'aux2' order represents '0' with '-58'
c Encoding variable: aux3 with domain: bool (representing constraint (2<=((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00002) + (0<grid_00003_00003) + (0<grid_00003_00004))))
c Var 'aux3' direct represents '0' with '-59'
c Var 'aux3' direct represents '1' with '59'
c Var 'aux3' order represents '1' with '1'
c Var 'aux3' order represents '0' with '-59'
c Encoding variable: aux4 with domain: bool (representing constraint (3<=((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00003) + (0<grid_00004_00004))))
c Var 'aux4' direct represents '0' with '-60'
c Var 'aux4' direct represents '1' with '60'
c Var 'aux4' order represents '1' with '1'
c Var 'aux4' order represents '0' with '-60'
c Encoding variable: aux5 with domain: bool (representing constraint (((0<grid_00000_00000) + (0<grid_00000_00001) + (0<grid_00000_00002) + (0<grid_00000_00003) + (0<grid_00000_00004))<=3))
c Var 'aux5' direct represents '0' with '-61'
c Var 'aux5' direct represents '1' with '61'
c Var 'aux5' order represents '1' with '1'
c Var 'aux5' order represents '0' with '-61'
c Encoding variable: aux6 with domain: bool (representing constraint (((0<grid_00001_00000) + (0<grid_00001_00001) + (0<grid_00001_00002) + (0<grid_00001_00003) + (0<grid_00001_00004))<=4))
c Var 'aux6' direct represents '0' with '-62'
c Var 'aux6' direct represents '1' with '62'
c Var 'aux6' order represents '1' with '1'
c Var 'aux6' order represents '0' with '-62'
c Encoding variable: aux7 with domain: bool (representing constraint (((0<grid_00002_00000) + (0<grid_00002_00001) + (0<grid_00002_00002) + (0<grid_00002_00003) + (0<grid_00002_00004))<=2))
c Var 'aux7' direct represents '0' with '-63'
c Var 'aux7' direct represents '1' with '63'
c Var 'aux7' order represents '1' with '1'
c Var 'aux7' order represents '0' with '-63'
c Encoding variable: aux8 with domain: bool (representing constraint (((0<grid_00003_00000) + (0<grid_00003_00001) + (0<grid_00003_00002) + (0<grid_00003_00003) + (0<grid_00003_00004))<=2))
c Var 'aux8' direct represents '0' with '-64'
c Var 'aux8' direct represents '1' with '64'
c Var 'aux8' order represents '1' with '1'
c Var 'aux8' order represents '0' with '-64'
c Encoding variable: aux9 with domain: bool (representing constraint (((0<grid_00004_00000) + (0<grid_00004_00001) + (0<grid_00004_00002) + (0<grid_00004_00003) + (0<grid_00004_00004))<=3))
c Var 'aux9' direct represents '0' with '-65'
c Var 'aux9' direct represents '1' with '65'
c Var 'aux9' order represents '1' with '1'
c Var 'aux9' order represents '0' with '-65'
c Encoding variable: aux10 with domain: bool (representing constraint (3<=((0<grid_00002_00000) + (0<grid_00003_00000) + (0<grid_00004_00000) + (0<grid_00000_00000) + (0<grid_00001_00000))))
c Var 'aux10' direct represents '0' with '-66'
c Var 'aux10' direct represents '1' with '66'
c Var 'aux10' order represents '1' with '1'
c Var 'aux10' order represents '0' with '-66'
c Encoding variable: aux11 with domain: bool (representing constraint (2<=((0<grid_00002_00001) + (0<grid_00003_00001) + (0<grid_00004_00001) + (0<grid_00000_00001) + (0<grid_00001_00001))))
c Var 'aux11' direct represents '0' with '-67'
c Var 'aux11' direct represents '1' with '67'
c Var 'aux11' order represents '1' with '1'
c Var 'aux11' order represents '0' with '-67'
c Encoding variable: aux12 with domain: bool (representing constraint (3<=((0<grid_00002_00002) + (0<grid_00003_00002) + (0<grid_00004_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))))
c Var 'aux12' direct represents '0' with '-68'
c Var 'aux12' direct represents '1' with '68'
c Var 'aux12' order represents '1' with '1'
c Var 'aux12' order represents '0' with '-68'
c Encoding variable: aux13 with domain: bool (representing constraint (3<=((0<grid_00002_00003) + (0<grid_00003_00003) + (0<grid_00004_00003) + (0<grid_00000_00003) + (0<grid_00001_00003))))
c Var 'aux13' direct represents '0' with '-69'
c Var 'aux13' direct represents '1' with '69'
c Var 'aux13' order represents '1' with '1'
c Var 'aux13' order represents '0' with '-69'
c Encoding variable: aux14 with domain: bool (representing constraint (3<=((0<grid_00002_00004) + (0<grid_00003_00004) + (0<grid_00004_00004) + (0<grid_00000_00004) + (0<grid_00001_00004))))
c Var 'aux14' direct represents '0' with '-70'
c Var 'aux14' direct represents '1' with '70'
c Var 'aux14' order represents '1' with '1'
c Var 'aux14' order represents '0' with '-70'
c Encoding variable: aux15 with domain: bool (representing constraint (3<=((0<grid_00002_00000) + (0<grid_00003_00000) + (0<grid_00004_00000) + (0<grid_00000_00000) + (0<grid_00001_00000))))
c Var 'aux15' direct represents '0' with '-71'
c Var 'aux15' direct represents '1' with '71'
c Var 'aux15' order represents '1' with '1'
c Var 'aux15' order represents '0' with '-71'
c Encoding variable: aux16 with domain: bool (representing constraint (2<=((0<grid_00002_00001) + (0<grid_00003_00001) + (0<grid_00004_00001) + (0<grid_00000_00001) + (0<grid_00001_00001))))
c Var 'aux16' direct represents '0' with '-72'
c Var 'aux16' direct represents '1' with '72'
c Var 'aux16' order represents '1' with '1'
c Var 'aux16' order represents '0' with '-72'
c Encoding variable: aux17 with domain: bool (representing constraint (3<=((0<grid_00002_00002) + (0<grid_00003_00002) + (0<grid_00004_00002) + (0<grid_00000_00002) + (0<grid_00001_00002))))
c Var 'aux17' direct represents '0' with '-73'
c Var 'aux17' direct represents '1' with '73'
c Var 'aux17' order represents '1' with '1'
c Var 'aux17' order represents '0' with '-73'
c Encoding variable: aux18 with domain: bool (representing constraint (3<=((0<grid_00002_00003) + (0<grid_00003_00003) + (0<grid_00004_00003) + (0<grid_00000_00003) + (0<grid_00001_00003))))
c Var 'aux18' direct represents '0' with '-74'
c Var 'aux18' direct represents '1' with '74'
c Var 'aux18' order represents '1' with '1'
c Var 'aux18' order represents '0' with '-74'
c Encoding variable: aux19 with domain: bool (representing constraint (3<=((0<grid_00002_00004) + (0<grid_00003_00004) + (0<grid_00004_00004) + (0<grid_00000_00004) + (0<grid_00001_00004))))
c Var 'aux19' direct represents '0' with '-75'
c Var 'aux19' direct represents '1' with '75'
c Var 'aux19' order represents '1' with '1'
c Var 'aux19' order represents '0' with '-75'
c Encoding variable: aux20 with domain: bool (representing constraint (grid_00004_00004 -> grid_00003_00004))
c Var 'aux20' direct represents '0' with '-76'
c Var 'aux20' direct represents '1' with '76'
c Var 'aux20' order represents '1' with '1'
c Var 'aux20' order represents '0' with '-76'
c Encoding variable: aux21 with domain: bool (representing constraint (grid_00001_00000 -> grid_00001_00001))
c Var 'aux21' direct represents '0' with '-77'
c Var 'aux21' direct represents '1' with '77'
c Var 'aux21' order represents '1' with '1'
c Var 'aux21' order represents '0' with '-77'
c Encoding variable: aux22 with domain: bool (representing constraint (grid_00003_00001 -> grid_00002_00001))
c Var 'aux22' direct represents '0' with '-78'
c Var 'aux22' direct represents '1' with '78'
c Var 'aux22' order represents '1' with '1'
c Var 'aux22' order represents '0' with '-78'
c Encoding variable: aux23 with domain: bool (representing constraint (grid_00000_00001 -> grid_00000_00000))
c Var 'aux23' direct represents '0' with '-79'
c Var 'aux23' direct represents '1' with '79'
c Var 'aux23' order represents '1' with '1'
c Var 'aux23' order represents '0' with '-79'
c Encoding variable: aux24 with domain: bool (representing constraint (grid_00000_00002 -> grid_00000_00001))
c Var 'aux24' direct represents '0' with '-80'
c Var 'aux24' direct represents '1' with '80'
c Var 'aux24' order represents '1' with '1'
c Var 'aux24' order represents '0' with '-80'
c Encoding variable: aux25 with domain: bool (representing constraint (grid_00000_00003 -> grid_00000_00002))
c Var 'aux25' direct represents '0' with '-81'
c Var 'aux25' direct represents '1' with '81'
c Var 'aux25' order represents '1' with '1'
c Var 'aux25' order represents '0' with '-81'
c Encoding variable: aux26 with domain: bool (representing constraint (grid_00000_00004 -> grid_00001_00004))
c Var 'aux26' direct represents '0' with '-82'
c Var 'aux26' direct represents '1' with '82'
c Var 'aux26' order represents '1' with '1'
c Var 'aux26' order represents '0' with '-82'
c Encoding variable: aux27 with domain: bool (representing constraint (grid_00001_00004 -> grid_00002_00004))
c Var 'aux27' direct represents '0' with '-83'
c Var 'aux27' direct represents '1' with '83'
c Var 'aux27' order represents '1' with '1'
c Var 'aux27' order represents '0' with '-83'
c Encoding variable: aux28 with domain: bool (representing constraint (grid_00004_00001 -> grid_00004_00002))
c Var 'aux28' direct represents '0' with '-84'
c Var 'aux28' direct represents '1' with '84'
c Var 'aux28' order represents '1' with '1'
c Var 'aux28' order represents '0' with '-84'
c Encoding variable: aux29 with domain: bool (representing constraint (grid_00004_00002 -> grid_00004_00003))
c Var 'aux29' direct represents '0' with '-85'
c Var 'aux29' direct represents '1' with '85'
c Var 'aux29' order represents '1' with '1'
c Var 'aux29' order represents '0' with '-85'
c Encoding variable: aux30 with domain: bool (representing constraint (grid_00002_00000 -> grid_00003_00000))
c Var 'aux30' direct represents '0' with '-86'
c Var 'aux30' direct represents '1' with '86'
c Var 'aux30' order represents '1' with '1'
c Var 'aux30' order represents '0' with '-86'
c Encoding variable: aux31 with domain: bool (representing constraint (grid_00003_00000 -> grid_00004_00000))
c Var 'aux31' direct represents '0' with '-87'
c Var 'aux31' direct represents '1' with '87'
c Var 'aux31' order represents '1' with '1'
c Var 'aux31' order represents '0' with '-87'
c Encoding variable: aux32 with domain: bool (representing constraint (grid_00001_00002 -> grid_00002_00002))
c Var 'aux32' direct represents '0' with '-88'
c Var 'aux32' direct represents '1' with '88'
c Var 'aux32' order represents '1' with '1'
c Var 'aux32' order represents '0' with '-88'
c Encoding variable: aux33 with domain: bool (representing constraint (grid_00002_00002 -> grid_00003_00002))
c Var 'aux33' direct represents '0' with '-89'
c Var 'aux33' direct represents '1' with '89'
c Var 'aux33' order represents '1' with '1'
c Var 'aux33' order represents '0' with '-89'
c Encoding variable: aux34 with domain: bool (representing constraint (grid_00002_00003 -> grid_00001_00003))
c Var 'aux34' direct represents '0' with '-90'
c Var 'aux34' direct represents '1' with '90'
c Var 'aux34' order represents '1' with '1'
c Var 'aux34' order represents '0' with '-90'
c Encoding variable: aux35 with domain: bool (representing constraint (grid_00003_00003 -> grid_00002_00003))
c Var 'aux35' direct represents '0' with '-91'
c Var 'aux35' direct represents '1' with '91'
c Var 'aux35' order represents '1' with '1'
c Var 'aux35' order represents '0' with '-91'
c Encoding variable: aux36 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux36' order represents '0' with '92'
c Var 'aux36' direct represents '0' with '92'
c Var 'aux36' order represents '1' with '93'
-92 93 0
c Var 'aux36' direct represents '1' with '94'
92 -93 94 0
-94 93 0
-94 -92 0
c Var 'aux36' direct represents '2' with '-93'
92 94 -93 0
c Encoding variable: aux37 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00000_00001)))
c Both direct and order encoding.
c Var 'aux37' order represents '0' with '95'
c Var 'aux37' direct represents '0' with '95'
c Var 'aux37' order represents '1' with '96'
-95 96 0
c Var 'aux37' direct represents '1' with '97'
95 -96 97 0
-97 96 0
-97 -95 0
c Var 'aux37' direct represents '2' with '-96'
95 97 -96 0
c Encoding variable: aux38 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux38' order represents '0' with '98'
c Var 'aux38' direct represents '0' with '98'
c Var 'aux38' order represents '1' with '99'
-98 99 0
c Var 'aux38' direct represents '1' with '100'
98 -99 100 0
-100 99 0
-100 -98 0
c Var 'aux38' direct represents '2' with '-99'
98 100 -99 0
c Encoding variable: aux39 with domain: int(0..2) (representing constraint ((0<grid_00001_00003) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux39' order represents '0' with '101'
c Var 'aux39' direct represents '0' with '101'
c Var 'aux39' order represents '1' with '102'
-101 102 0
c Var 'aux39' direct represents '1' with '103'
101 -102 103 0
-103 102 0
-103 -101 0
c Var 'aux39' direct represents '2' with '-102'
101 103 -102 0
c Encoding variable: aux40 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux40' order represents '0' with '104'
c Var 'aux40' direct represents '0' with '104'
c Var 'aux40' order represents '1' with '105'
-104 105 0
c Var 'aux40' direct represents '1' with '106'
104 -105 106 0
-106 105 0
-106 -104 0
c Var 'aux40' direct represents '2' with '-105'
104 106 -105 0
c Encoding variable: aux41 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux41' order represents '0' with '107'
c Var 'aux41' direct represents '0' with '107'
c Var 'aux41' order represents '1' with '108'
-107 108 0
c Var 'aux41' direct represents '1' with '109'
107 -108 109 0
-109 108 0
-109 -107 0
c Var 'aux41' direct represents '2' with '-108'
107 109 -108 0
c Encoding variable: aux42 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux42' order represents '0' with '110'
c Var 'aux42' direct represents '0' with '110'
c Var 'aux42' order represents '1' with '111'
-110 111 0
c Var 'aux42' direct represents '1' with '112'
110 -111 112 0
-112 111 0
-112 -110 0
c Var 'aux42' direct represents '2' with '-111'
110 112 -111 0
c Encoding variable: aux43 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux43' order represents '0' with '113'
c Var 'aux43' direct represents '0' with '113'
c Var 'aux43' order represents '1' with '114'
-113 114 0
c Var 'aux43' direct represents '1' with '115'
113 -114 115 0
-115 114 0
-115 -113 0
c Var 'aux43' direct represents '2' with '-114'
113 115 -114 0
c Encoding variable: aux44 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux44' order represents '0' with '116'
c Var 'aux44' direct represents '0' with '116'
c Var 'aux44' order represents '1' with '117'
-116 117 0
c Var 'aux44' direct represents '1' with '118'
116 -117 118 0
-118 117 0
-118 -116 0
c Var 'aux44' direct represents '2' with '-117'
116 118 -117 0
c Encoding variable: aux45 with domain: int(0..2) (representing constraint ((0<grid_00004_00003) + (0<grid_00004_00001)))
c Both direct and order encoding.
c Var 'aux45' order represents '0' with '119'
c Var 'aux45' direct represents '0' with '119'
c Var 'aux45' order represents '1' with '120'
-119 120 0
c Var 'aux45' direct represents '1' with '121'
119 -120 121 0
-121 120 0
-121 -119 0
c Var 'aux45' direct represents '2' with '-120'
119 121 -120 0
c Encoding variable: aux46 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00000_00004)))
c Both direct and order encoding.
c Var 'aux46' order represents '0' with '122'
c Var 'aux46' direct represents '0' with '122'
c Var 'aux46' order represents '1' with '123'
-122 123 0
c Var 'aux46' direct represents '1' with '124'
122 -123 124 0
-124 123 0
-124 -122 0
c Var 'aux46' direct represents '2' with '-123'
122 124 -123 0
c Encoding variable: aux47 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00000_00001)))
c Both direct and order encoding.
c Var 'aux47' order represents '0' with '125'
c Var 'aux47' direct represents '0' with '125'
c Var 'aux47' order represents '1' with '126'
-125 126 0
c Var 'aux47' direct represents '1' with '127'
125 -126 127 0
-127 126 0
-127 -125 0
c Var 'aux47' direct represents '2' with '-126'
125 127 -126 0
c Encoding variable: aux48 with domain: int(0..2) (representing constraint ((0<grid_00001_00000) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux48' order represents '0' with '128'
c Var 'aux48' direct represents '0' with '128'
c Var 'aux48' order represents '1' with '129'
-128 129 0
c Var 'aux48' direct represents '1' with '130'
128 -129 130 0
-130 129 0
-130 -128 0
c Var 'aux48' direct represents '2' with '-129'
128 130 -129 0
c Encoding variable: aux49 with domain: int(0..2) (representing constraint ((0<grid_00001_00003) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux49' order represents '0' with '131'
c Var 'aux49' direct represents '0' with '131'
c Var 'aux49' order represents '1' with '132'
-131 132 0
c Var 'aux49' direct represents '1' with '133'
131 -132 133 0
-133 132 0
-133 -131 0
c Var 'aux49' direct represents '2' with '-132'
131 133 -132 0
c Encoding variable: aux50 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00002_00004)))
c Both direct and order encoding.
c Var 'aux50' order represents '0' with '134'
c Var 'aux50' direct represents '0' with '134'
c Var 'aux50' order represents '1' with '135'
-134 135 0
c Var 'aux50' direct represents '1' with '136'
134 -135 136 0
-136 135 0
-136 -134 0
c Var 'aux50' direct represents '2' with '-135'
134 136 -135 0
c Encoding variable: aux51 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00002_00001)))
c Both direct and order encoding.
c Var 'aux51' order represents '0' with '137'
c Var 'aux51' direct represents '0' with '137'
c Var 'aux51' order represents '1' with '138'
-137 138 0
c Var 'aux51' direct represents '1' with '139'
137 -138 139 0
-139 138 0
-139 -137 0
c Var 'aux51' direct represents '2' with '-138'
137 139 -138 0
c Encoding variable: aux52 with domain: int(0..2) (representing constraint ((0<grid_00003_00000) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux52' order represents '0' with '140'
c Var 'aux52' direct represents '0' with '140'
c Var 'aux52' order represents '1' with '141'
-140 141 0
c Var 'aux52' direct represents '1' with '142'
140 -141 142 0
-142 141 0
-142 -140 0
c Var 'aux52' direct represents '2' with '-141'
140 142 -141 0
c Encoding variable: aux53 with domain: int(0..2) (representing constraint ((0<grid_00003_00003) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux53' order represents '0' with '143'
c Var 'aux53' direct represents '0' with '143'
c Var 'aux53' order represents '1' with '144'
-143 144 0
c Var 'aux53' direct represents '1' with '145'
143 -144 145 0
-145 144 0
-145 -143 0
c Var 'aux53' direct represents '2' with '-144'
143 145 -144 0
c Encoding variable: aux54 with domain: int(0..2) (representing constraint ((0<grid_00004_00000) + (0<grid_00004_00004)))
c Both direct and order encoding.
c Var 'aux54' order represents '0' with '146'
c Var 'aux54' direct represents '0' with '146'
c Var 'aux54' order represents '1' with '147'
-146 147 0
c Var 'aux54' direct represents '1' with '148'
146 -147 148 0
-148 147 0
-148 -146 0
c Var 'aux54' direct represents '2' with '-147'
146 148 -147 0
c Encoding variable: aux55 with domain: int(0..2) (representing constraint ((0<grid_00004_00003) + (0<grid_00004_00001)))
c Both direct and order encoding.
c Var 'aux55' order represents '0' with '149'
c Var 'aux55' direct represents '0' with '149'
c Var 'aux55' order represents '1' with '150'
-149 150 0
c Var 'aux55' direct represents '1' with '151'
149 -150 151 0
-151 150 0
-151 -149 0
c Var 'aux55' direct represents '2' with '-150'
149 151 -150 0
c Encoding variable: aux56 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00001_00000)))
c Both direct and order encoding.
c Var 'aux56' order represents '0' with '152'
c Var 'aux56' direct represents '0' with '152'
c Var 'aux56' order represents '1' with '153'
-152 153 0
c Var 'aux56' direct represents '1' with '154'
152 -153 154 0
-154 153 0
-154 -152 0
c Var 'aux56' direct represents '2' with '-153'
152 154 -153 0
c Encoding variable: aux57 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00003_00000)))
c Both direct and order encoding.
c Var 'aux57' order represents '0' with '155'
c Var 'aux57' direct represents '0' with '155'
c Var 'aux57' order represents '1' with '156'
-155 156 0
c Var 'aux57' direct represents '1' with '157'
155 -156 157 0
-157 156 0
-157 -155 0
c Var 'aux57' direct represents '2' with '-156'
155 157 -156 0
c Encoding variable: aux58 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux58' order represents '0' with '158'
c Var 'aux58' direct represents '0' with '158'
c Var 'aux58' order represents '1' with '159'
-158 159 0
c Var 'aux58' direct represents '1' with '160'
158 -159 160 0
-160 159 0
-160 -158 0
c Var 'aux58' direct represents '2' with '-159'
158 160 -159 0
c Encoding variable: aux59 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux59' order represents '0' with '161'
c Var 'aux59' direct represents '0' with '161'
c Var 'aux59' order represents '1' with '162'
-161 162 0
c Var 'aux59' direct represents '1' with '163'
161 -162 163 0
-163 162 0
-163 -161 0
c Var 'aux59' direct represents '2' with '-162'
161 163 -162 0
c Encoding variable: aux60 with domain: int(0..2) (representing constraint ((0<grid_00002_00002) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux60' order represents '0' with '164'
c Var 'aux60' direct represents '0' with '164'
c Var 'aux60' order represents '1' with '165'
-164 165 0
c Var 'aux60' direct represents '1' with '166'
164 -165 166 0
-166 165 0
-166 -164 0
c Var 'aux60' direct represents '2' with '-165'
164 166 -165 0
c Encoding variable: aux61 with domain: int(0..2) (representing constraint ((0<grid_00000_00002) + (0<grid_00003_00002)))
c Both direct and order encoding.
c Var 'aux61' order represents '0' with '167'
c Var 'aux61' direct represents '0' with '167'
c Var 'aux61' order represents '1' with '168'
-167 168 0
c Var 'aux61' direct represents '1' with '169'
167 -168 169 0
-169 168 0
-169 -167 0
c Var 'aux61' direct represents '2' with '-168'
167 169 -168 0
c Encoding variable: aux62 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux62' order represents '0' with '170'
c Var 'aux62' direct represents '0' with '170'
c Var 'aux62' order represents '1' with '171'
-170 171 0
c Var 'aux62' direct represents '1' with '172'
170 -171 172 0
-172 171 0
-172 -170 0
c Var 'aux62' direct represents '2' with '-171'
170 172 -171 0
c Encoding variable: aux63 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00003_00003)))
c Both direct and order encoding.
c Var 'aux63' order represents '0' with '173'
c Var 'aux63' direct represents '0' with '173'
c Var 'aux63' order represents '1' with '174'
-173 174 0
c Var 'aux63' direct represents '1' with '175'
173 -174 175 0
-175 174 0
-175 -173 0
c Var 'aux63' direct represents '2' with '-174'
173 175 -174 0
c Encoding variable: aux64 with domain: int(0..2) (representing constraint ((0<grid_00002_00004) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux64' order represents '0' with '176'
c Var 'aux64' direct represents '0' with '176'
c Var 'aux64' order represents '1' with '177'
-176 177 0
c Var 'aux64' direct represents '1' with '178'
176 -177 178 0
-178 177 0
-178 -176 0
c Var 'aux64' direct represents '2' with '-177'
176 178 -177 0
c Encoding variable: aux65 with domain: int(0..2) (representing constraint ((0<grid_00000_00004) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux65' order represents '0' with '179'
c Var 'aux65' direct represents '0' with '179'
c Var 'aux65' order represents '1' with '180'
-179 180 0
c Var 'aux65' direct represents '1' with '181'
179 -180 181 0
-181 180 0
-181 -179 0
c Var 'aux65' direct represents '2' with '-180'
179 181 -180 0
c Encoding variable: aux66 with domain: int(0..2) (representing constraint ((0<grid_00002_00000) + (0<grid_00001_00000)))
c Both direct and order encoding.
c Var 'aux66' order represents '0' with '182'
c Var 'aux66' direct represents '0' with '182'
c Var 'aux66' order represents '1' with '183'
-182 183 0
c Var 'aux66' direct represents '1' with '184'
182 -183 184 0
-184 183 0
-184 -182 0
c Var 'aux66' direct represents '2' with '-183'
182 184 -183 0
c Encoding variable: aux67 with domain: int(0..2) (representing constraint ((0<grid_00000_00000) + (0<grid_00003_00000)))
c Both direct and order encoding.
c Var 'aux67' order represents '0' with '185'
c Var 'aux67' direct represents '0' with '185'
c Var 'aux67' order represents '1' with '186'
-185 186 0
c Var 'aux67' direct represents '1' with '187'
185 -186 187 0
-187 186 0
-187 -185 0
c Var 'aux67' direct represents '2' with '-186'
185 187 -186 0
c Encoding variable: aux68 with domain: int(0..2) (representing constraint ((0<grid_00002_00001) + (0<grid_00001_00001)))
c Both direct and order encoding.
c Var 'aux68' order represents '0' with '188'
c Var 'aux68' direct represents '0' with '188'
c Var 'aux68' order represents '1' with '189'
-188 189 0
c Var 'aux68' direct represents '1' with '190'
188 -189 190 0
-190 189 0
-190 -188 0
c Var 'aux68' direct represents '2' with '-189'
188 190 -189 0
c Encoding variable: aux69 with domain: int(0..2) (representing constraint ((0<grid_00000_00001) + (0<grid_00003_00001)))
c Both direct and order encoding.
c Var 'aux69' order represents '0' with '191'
c Var 'aux69' direct represents '0' with '191'
c Var 'aux69' order represents '1' with '192'
-191 192 0
c Var 'aux69' direct represents '1' with '193'
191 -192 193 0
-193 192 0
-193 -191 0
c Var 'aux69' direct represents '2' with '-192'
191 193 -192 0
c Encoding variable: aux70 with domain: int(0..2) (representing constraint ((0<grid_00002_00002) + (0<grid_00001_00002)))
c Both direct and order encoding.
c Var 'aux70' order represents '0' with '194'
c Var 'aux70' direct represents '0' with '194'
c Var 'aux70' order represents '1' with '195'
-194 195 0
c Var 'aux70' direct represents '1' with '196'
194 -195 196 0
-196 195 0
-196 -194 0
c Var 'aux70' direct represents '2' with '-195'
194 196 -195 0
c Encoding variable: aux71 with domain: int(0..2) (representing constraint ((0<grid_00000_00002) + (0<grid_00003_00002)))
c Both direct and order encoding.
c Var 'aux71' order represents '0' with '197'
c Var 'aux71' direct represents '0' with '197'
c Var 'aux71' order represents '1' with '198'
-197 198 0
c Var 'aux71' direct represents '1' with '199'
197 -198 199 0
-199 198 0
-199 -197 0
c Var 'aux71' direct represents '2' with '-198'
197 199 -198 0
c Encoding variable: aux72 with domain: int(0..2) (representing constraint ((0<grid_00002_00003) + (0<grid_00001_00003)))
c Both direct and order encoding.
c Var 'aux72' order represents '0' with '200'
c Var 'aux72' direct represents '0' with '200'
c Var 'aux72' order represents '1' with '201'
-200 201 0
c Var 'aux72' direct represents '1' with '202'
200 -201 202 0
-202 201 0
-202 -200 0
c Var 'aux72' direct represents '2' with '-201'
200 202 -201 0
c Encoding variable: aux73 with domain: int(0..2) (representing constraint ((0<grid_00000_00003) + (0<grid_00003_00003)))
c Both direct and order encoding.
c Var 'aux73' order represents '0' with '203'
c Var 'aux73' direct represents '0' with '203'
c Var 'aux73' order represents '1' with '204'
-203 204 0
c Var 'aux73' direct represents '1' with '205'
203 -204 205 0
-205 204 0
-205 -203 0
c Var 'aux73' direct represents '2' with '-204'
203 205 -204 0
c Encoding variable: aux74 with domain: int(0..2) (representing constraint ((0<grid_00002_00004) + (0<grid_00001_00004)))
c Both direct and order encoding.
c Var 'aux74' order represents '0' with '206'
c Var 'aux74' direct represents '0' with '206'
c Var 'aux74' order represents '1' with '207'
-206 207 0
c Var 'aux74' direct represents '1' with '208'
206 -207 208 0
-208 207 0
-208 -206 0
c Var 'aux74' direct represents '2' with '-207'
206 208 -207 0
c Encoding variable: aux75 with domain: int(0..2) (representing constraint ((0<grid_00000_00004) + (0<grid_00003_00004)))
c Both direct and order encoding.
c Var 'aux75' order represents '0' with '209'
c Var 'aux75' direct represents '0' with '209'
c Var 'aux75' order represents '1' with '210'
-209 210 0
c Var 'aux75' direct represents '1' with '211'
209 -210 211 0
-211 210 0
-211 -209 0
c Var 'aux75' direct represents '2' with '-210'
209 211 -210 0
c ((3<=(aux36 + aux37 + SATLiteral(4)))=tv=SATLiteral(56))
-56 -93 -95 0
-56 -92 -96 0
-56 4 -95 0
-56 4 -93 -96 0
-56 4 -92 0
56 92 96 0
56 93 95 0
56 -4 96 0
56 -4 92 95 0
56 -4 93 0
c ((4<=(aux38 + aux39 + SATLiteral(9)))=tv=SATLiteral(57))
-57 -101 0
-57 -99 -102 0
-57 -98 0
-57 9 -102 0
-57 9 -99 0
-57 9 -98 0
57 99 102 0
57 -9 98 102 0
57 -9 99 101 0
c ((2<=(SATLiteral(14) + aux40 + aux41))=tv=SATLiteral(58))
-58 -104 -107 0
-58 14 -105 -107 0
-58 14 -104 -108 0
58 108 0
58 104 107 0
58 105 0
58 -14 107 0
58 -14 104 0
58 -14 105 0
c ((2<=(SATLiteral(19) + aux42 + aux43))=tv=SATLiteral(59))
-59 -110 -113 0
-59 19 -111 -113 0
-59 19 -110 -114 0
59 114 0
59 110 113 0
59 111 0
59 -19 113 0
59 -19 110 0
59 -19 111 0
c ((3<=(SATLiteral(24) + aux44 + aux45))=tv=SATLiteral(60))
-60 -117 -119 0
-60 -116 -120 0
-60 24 -119 0
-60 24 -117 -120 0
-60 24 -116 0
60 116 120 0
60 117 119 0
60 -24 120 0
60 -24 116 119 0
60 -24 117 0
c (((aux46 + aux47 + SATLiteral(4))<=3)=tv=SATLiteral(61))
-61 123 126 0
-61 -4 122 126 0
-61 -4 123 125 0
61 -125 0
61 -123 -126 0
61 -122 0
61 4 -126 0
61 4 -123 0
61 4 -122 0
c (((aux48 + aux49 + SATLiteral(9))<=4)=tv=SATLiteral(62))
-62 -9 129 132 0
62 -132 0
62 -129 0
62 -128 0
62 9 0
62 9 -129 0
62 9 -128 0
c (((SATLiteral(14) + aux50 + aux51)<=2)=tv=SATLiteral(63))
-63 134 138 0
-63 135 137 0
-63 -14 138 0
-63 -14 134 137 0
-63 -14 135 0
63 -135 -137 0
63 -134 -138 0
63 14 -137 0
63 14 -135 -138 0
63 14 -134 0
c (((SATLiteral(19) + aux52 + aux53)<=2)=tv=SATLiteral(64))
-64 140 144 0
-64 141 143 0
-64 -19 144 0
-64 -19 140 143 0
-64 -19 141 0
64 -141 -143 0
64 -140 -144 0
64 19 -143 0
64 19 -141 -144 0
64 19 -140 0
c (((SATLiteral(24) + aux54 + aux55)<=3)=tv=SATLiteral(65))
-65 147 150 0
-65 -24 146 150 0
-65 -24 147 149 0
65 -149 0
65 -147 -150 0
65 -146 0
65 24 -150 0
65 24 -147 0
65 24 -146 0
c ((3<=(SATLiteral(22) + aux56 + aux57))=tv=SATLiteral(66))
-66 -153 -155 0
-66 -152 -156 0
-66 22 -155 0
-66 22 -153 -156 0
-66 22 -152 0
66 152 156 0
66 153 155 0
66 -22 156 0
66 -22 152 155 0
66 -22 153 0
c ((2<=(SATLiteral(23) + aux58 + aux59))=tv=SATLiteral(67))
-67 -158 -161 0
-67 23 -159 -161 0
-67 23 -158 -162 0
67 162 0
67 158 161 0
67 159 0
67 -23 161 0
67 -23 158 0
67 -23 159 0
c ((3<=(SATLiteral(24) + aux60 + aux61))=tv=SATLiteral(68))
-68 -165 -167 0
-68 -164 -168 0
-68 24 -167 0
-68 24 -165 -168 0
-68 24 -164 0
68 164 168 0
68 165 167 0
68 -24 168 0
68 -24 164 167 0
68 -24 165 0
c ((3<=(SATLiteral(25) + aux62 + aux63))=tv=SATLiteral(69))
-69 -171 -173 0
-69 -170 -174 0
-69 25 -173 0
-69 25 -171 -174 0
-69 25 -170 0
69 170 174 0
69 171 173 0
69 -25 174 0
69 -25 170 173 0
69 -25 171 0
c ((3<=(SATLiteral(26) + aux64 + aux65))=tv=SATLiteral(70))
-70 -177 -179 0
-70 -176 -180 0
-70 26 -179 0
-70 26 -177 -180 0
-70 26 -176 0
70 176 180 0
70 177 179 0
70 -26 180 0
70 -26 176 179 0
70 -26 177 0
c ((3<=(SATLiteral(22) + aux66 + aux67))=tv=SATLiteral(71))
-71 -183 -185 0
-71 -182 -186 0
-71 22 -185 0
-71 22 -183 -186 0
-71 22 -182 0
71 182 186 0
71 183 185 0
71 -22 186 0
71 -22 182 185 0
71 -22 183 0
c ((2<=(SATLiteral(23) + aux68 + aux69))=tv=SATLiteral(72))
-72 -188 -191 0
-72 23 -189 -191 0
-72 23 -188 -192 0
72 192 0
72 188 191 0
72 189 0
72 -23 191 0
72 -23 188 0
72 -23 189 0
c ((3<=(SATLiteral(24) + aux70 + aux71))=tv=SATLiteral(73))
-73 -195 -197 0
-73 -194 -198 0
-73 24 -197 0
-73 24 -195 -198 0
-73 24 -194 0
73 194 198 0
73 195 197 0
73 -24 198 0
73 -24 194 197 0
73 -24 195 0
c ((3<=(SATLiteral(25) + aux72 + aux73))=tv=SATLiteral(74))
-74 -201 -203 0
-74 -200 -204 0
-74 25 -203 0
-74 25 -201 -204 0
-74 25 -200 0
74 200 204 0
74 201 203 0
74 -25 204 0
74 -25 200 203 0
74 -25 201 0
c ((3<=(SATLiteral(26) + aux74 + aux75))=tv=SATLiteral(75))
-75 -207 -209 0
-75 -206 -210 0
-75 26 -209 0
-75 26 -207 -210 0
-75 26 -206 0
75 206 210 0
75 207 209 0
75 -26 210 0
75 -26 206 209 0
75 -26 207 0
c ((SATLiteral(26) -> SATLiteral(21))=tv=SATLiteral(76))
-76 -26 21 0
26 76 0
-21 76 0
c ((SATLiteral(7) -> SATLiteral(8))=tv=SATLiteral(77))
-77 -7 8 0
7 77 0
-8 77 0
c ((SATLiteral(18) -> SATLiteral(13))=tv=SATLiteral(78))
-78 -18 13 0
18 78 0
-13 78 0
c ((SATLiteral(3) -> SATLiteral(2))=tv=SATLiteral(79))
-79 -3 2 0
3 79 0
-2 79 0
c ((SATLiteral(4) -> SATLiteral(3))=tv=SATLiteral(80))
-80 -4 3 0
4 80 0
-3 80 0
c ((SATLiteral(5) -> SATLiteral(4))=tv=SATLiteral(81))
-81 -5 4 0
5 81 0
-4 81 0
c ((SATLiteral(6) -> SATLiteral(11))=tv=SATLiteral(82))
-82 -6 11 0
6 82 0
-11 82 0
c ((SATLiteral(11) -> SATLiteral(16))=tv=SATLiteral(83))
-83 -11 16 0
11 83 0
-16 83 0
c ((SATLiteral(23) -> SATLiteral(24))=tv=SATLiteral(84))
-84 -23 24 0
23 84 0
-24 84 0
c ((SATLiteral(24) -> SATLiteral(25))=tv=SATLiteral(85))
-85 -24 25 0
24 85 0
-25 85 0
c ((SATLiteral(12) -> SATLiteral(17))=tv=SATLiteral(86))
-86 -12 17 0
12 86 0
-17 86 0
c ((SATLiteral(17) -> SATLiteral(22))=tv=SATLiteral(87))
-87 -17 22 0
17 87 0
-22 87 0
c ((SATLiteral(9) -> SATLiteral(14))=tv=SATLiteral(88))
-88 -9 14 0
9 88 0
-14 88 0
c ((SATLiteral(14) -> SATLiteral(19))=tv=SATLiteral(89))
-89 -14 19 0
14 89 0
-19 89 0
c ((SATLiteral(15) -> SATLiteral(10))=tv=SATLiteral(90))
-90 -15 10 0
15 90 0
-10 90 0
c ((SATLiteral(20) -> SATLiteral(15))=tv=SATLiteral(91))
-91 -20 15 0
20 91 0
-15 91 0
c (SATLiteral(36) -> SATLiteral(56))
-36 56 0
c (SATLiteral(37) -> SATLiteral(57))
-37 57 0
c (SATLiteral(38) -> SATLiteral(58))
-38 58 0
c (SATLiteral(39) -> SATLiteral(59))
-39 59 0
c (SATLiteral(40) -> SATLiteral(60))
-40 60 0
c (SATLiteral(41) -> SATLiteral(61))
-41 61 0
c (SATLiteral(42) -> SATLiteral(62))
-42 62 0
c (SATLiteral(43) -> SATLiteral(63))
-43 63 0
c (SATLiteral(44) -> SATLiteral(64))
-44 64 0
c (SATLiteral(45) -> SATLiteral(65))
-45 65 0
c (SATLiteral(46) -> SATLiteral(66))
-46 66 0
c (SATLiteral(47) -> SATLiteral(67))
-47 67 0
c (SATLiteral(48) -> SATLiteral(68))
-48 68 0
c (SATLiteral(49) -> SATLiteral(69))
-49 69 0
c (SATLiteral(50) -> SATLiteral(70))
-50 70 0
c (SATLiteral(51) -> SATLiteral(71))
-51 71 0
c (SATLiteral(52) -> SATLiteral(72))
-52 72 0
c (SATLiteral(53) -> SATLiteral(73))
-53 73 0
c (SATLiteral(54) -> SATLiteral(74))
-54 74 0
c (SATLiteral(55) -> SATLiteral(75))
-55 75 0
c (SATLiteral(76) \/ SATLiteral(-29))
76 -29 0
c (SATLiteral(-32) \/ SATLiteral(77))
-32 77 0
c (SATLiteral(-33) \/ SATLiteral(78))
-33 78 0
c (SATLiteral(79) \/ SATLiteral(-27))
79 -27 0
c (SATLiteral(80) \/ SATLiteral(-27))
80 -27 0
c (SATLiteral(81) \/ SATLiteral(-27))
81 -27 0
c (SATLiteral(82) \/ SATLiteral(-28))
82 -28 0
c (SATLiteral(83) \/ SATLiteral(-28))
83 -28 0
c (SATLiteral(84) \/ SATLiteral(-30))
84 -30 0
c (SATLiteral(85) \/ SATLiteral(-30))
85 -30 0
c (SATLiteral(86) \/ SATLiteral(-31))
86 -31 0
c (SATLiteral(87) \/ SATLiteral(-31))
87 -31 0
c (SATLiteral(88) \/ SATLiteral(-34))
88 -34 0
c (SATLiteral(89) \/ SATLiteral(-34))
89 -34 0
c (SATLiteral(90) \/ SATLiteral(-35))
90 -35 0
c (SATLiteral(-35) \/ SATLiteral(91))
-35 91 0
c (( - aux36 + SATLiteral(2) + SATLiteral(6))<=0)
-6 -92 0
-2 -92 0
-2 -6 -93 0
c (0<=( - aux36 + SATLiteral(2) + SATLiteral(6)))
6 93 0
2 93 0
2 6 92 0
c (( - aux37 + SATLiteral(3) + SATLiteral(5))<=0)
-5 -95 0
-3 -95 0
-3 -5 -96 0
c (0<=( - aux37 + SATLiteral(3) + SATLiteral(5)))
5 96 0
3 96 0
3 5 95 0
c (( - aux38 + SATLiteral(7) + SATLiteral(11))<=0)
-11 -98 0
-7 -98 0
-7 -11 -99 0
c (0<=( - aux38 + SATLiteral(7) + SATLiteral(11)))
11 99 0
7 99 0
7 11 98 0
c (( - aux39 + SATLiteral(8) + SATLiteral(10))<=0)
-10 -101 0
-8 -101 0
-8 -10 -102 0
c (0<=( - aux39 + SATLiteral(8) + SATLiteral(10)))
10 102 0
8 102 0
8 10 101 0
c ((SATLiteral(12) + SATLiteral(16) - aux40)<=0)
-16 -104 0
-12 -104 0
-12 -16 -105 0
c (0<=(SATLiteral(12) + SATLiteral(16) - aux40))
16 105 0
12 105 0
12 16 104 0
c ((SATLiteral(13) + SATLiteral(15) - aux41)<=0)
-15 -107 0
-13 -107 0
-13 -15 -108 0
c (0<=(SATLiteral(13) + SATLiteral(15) - aux41))
15 108 0
13 108 0
13 15 107 0
c ((SATLiteral(17) + SATLiteral(21) - aux42)<=0)
-21 -110 0
-17 -110 0
-17 -21 -111 0
c (0<=(SATLiteral(17) + SATLiteral(21) - aux42))
21 111 0
17 111 0
17 21 110 0
c ((SATLiteral(18) + SATLiteral(20) - aux43)<=0)
-20 -113 0
-18 -113 0
-18 -20 -114 0
c (0<=(SATLiteral(18) + SATLiteral(20) - aux43))
20 114 0
18 114 0
18 20 113 0
c ((SATLiteral(22) + SATLiteral(26) - aux44)<=0)
-26 -116 0
-22 -116 0
-22 -26 -117 0
c (0<=(SATLiteral(22) + SATLiteral(26) - aux44))
26 117 0
22 117 0
22 26 116 0
c ((SATLiteral(23) + SATLiteral(25) - aux45)<=0)
-25 -119 0
-23 -119 0
-23 -25 -120 0
c (0<=(SATLiteral(23) + SATLiteral(25) - aux45))
25 120 0
23 120 0
23 25 119 0
c (( - aux46 + SATLiteral(2) + SATLiteral(6))<=0)
-6 -122 0
-2 -122 0
-2 -6 -123 0
c (0<=( - aux46 + SATLiteral(2) + SATLiteral(6)))
6 123 0
2 123 0
2 6 122 0
c (( - aux47 + SATLiteral(3) + SATLiteral(5))<=0)
-5 -125 0
-3 -125 0
-3 -5 -126 0
c (0<=( - aux47 + SATLiteral(3) + SATLiteral(5)))
5 126 0
3 126 0
3 5 125 0
c (( - aux48 + SATLiteral(7) + SATLiteral(11))<=0)
-11 -128 0
-7 -128 0
-7 -11 -129 0
c (0<=( - aux48 + SATLiteral(7) + SATLiteral(11)))
11 129 0
7 129 0
7 11 128 0
c (( - aux49 + SATLiteral(8) + SATLiteral(10))<=0)
-10 -131 0
-8 -131 0
-8 -10 -132 0
c (0<=( - aux49 + SATLiteral(8) + SATLiteral(10)))
10 132 0
8 132 0
8 10 131 0
c ((SATLiteral(12) + SATLiteral(16) - aux50)<=0)
-16 -134 0
-12 -134 0
-12 -16 -135 0
c (0<=(SATLiteral(12) + SATLiteral(16) - aux50))
16 135 0
12 135 0
12 16 134 0
c ((SATLiteral(13) + SATLiteral(15) - aux51)<=0)
-15 -137 0
-13 -137 0
-13 -15 -138 0
c (0<=(SATLiteral(13) + SATLiteral(15) - aux51))
15 138 0
13 138 0
13 15 137 0
c ((SATLiteral(17) + SATLiteral(21) - aux52)<=0)
-21 -140 0
-17 -140 0
-17 -21 -141 0
c (0<=(SATLiteral(17) + SATLiteral(21) - aux52))
21 141 0
17 141 0
17 21 140 0
c ((SATLiteral(18) + SATLiteral(20) - aux53)<=0)
-20 -143 0
-18 -143 0
-18 -20 -144 0
c (0<=(SATLiteral(18) + SATLiteral(20) - aux53))
20 144 0
18 144 0
18 20 143 0
c ((SATLiteral(22) + SATLiteral(26) - aux54)<=0)
-26 -146 0
-22 -146 0
-22 -26 -147 0
c (0<=(SATLiteral(22) + SATLiteral(26) - aux54))
26 147 0
22 147 0
22 26 146 0
c ((SATLiteral(23) + SATLiteral(25) - aux55)<=0)
-25 -149 0
-23 -149 0
-23 -25 -150 0
c (0<=(SATLiteral(23) + SATLiteral(25) - aux55))
25 150 0
23 150 0
23 25 149 0
c ((SATLiteral(12) - aux56 + SATLiteral(7))<=0)
-7 -152 0
-12 -152 0
-12 -7 -153 0
c (0<=(SATLiteral(12) - aux56 + SATLiteral(7)))
7 153 0
12 153 0
12 7 152 0
c ((SATLiteral(17) - aux57 + SATLiteral(2))<=0)
-2 -155 0
-17 -155 0
-17 -2 -156 0
c (0<=(SATLiteral(17) - aux57 + SATLiteral(2)))
2 156 0
17 156 0
17 2 155 0
c ((SATLiteral(13) - aux58 + SATLiteral(8))<=0)
-8 -158 0
-13 -158 0
-13 -8 -159 0
c (0<=(SATLiteral(13) - aux58 + SATLiteral(8)))
8 159 0
13 159 0
13 8 158 0
c ((SATLiteral(18) - aux59 + SATLiteral(3))<=0)
-3 -161 0
-18 -161 0
-18 -3 -162 0
c (0<=(SATLiteral(18) - aux59 + SATLiteral(3)))
3 162 0
18 162 0
18 3 161 0
c ((SATLiteral(14) - aux60 + SATLiteral(9))<=0)
-9 -164 0
-14 -164 0
-14 -9 -165 0
c (0<=(SATLiteral(14) - aux60 + SATLiteral(9)))
9 165 0
14 165 0
14 9 164 0
c ((SATLiteral(19) - aux61 + SATLiteral(4))<=0)
-4 -167 0
-19 -167 0
-19 -4 -168 0
c (0<=(SATLiteral(19) - aux61 + SATLiteral(4)))
4 168 0
19 168 0
19 4 167 0
c ((SATLiteral(15) - aux62 + SATLiteral(10))<=0)
-10 -170 0
-15 -170 0
-15 -10 -171 0
c (0<=(SATLiteral(15) - aux62 + SATLiteral(10)))
10 171 0
15 171 0
15 10 170 0
c ((SATLiteral(20) - aux63 + SATLiteral(5))<=0)
-5 -173 0
-20 -173 0
-20 -5 -174 0
c (0<=(SATLiteral(20) - aux63 + SATLiteral(5)))
5 174 0
20 174 0
20 5 173 0
c ((SATLiteral(16) - aux64 + SATLiteral(11))<=0)
-11 -176 0
-16 -176 0
-16 -11 -177 0
c (0<=(SATLiteral(16) - aux64 + SATLiteral(11)))
11 177 0
16 177 0
16 11 176 0
c ((SATLiteral(21) - aux65 + SATLiteral(6))<=0)
-6 -179 0
-21 -179 0
-21 -6 -180 0
c (0<=(SATLiteral(21) - aux65 + SATLiteral(6)))
6 180 0
21 180 0
21 6 179 0
c ((SATLiteral(12) - aux66 + SATLiteral(7))<=0)
-7 -182 0
-12 -182 0
-12 -7 -183 0
c (0<=(SATLiteral(12) - aux66 + SATLiteral(7)))
7 183 0
12 183 0
12 7 182 0
c ((SATLiteral(17) - aux67 + SATLiteral(2))<=0)
-2 -185 0
-17 -185 0
-17 -2 -186 0
c (0<=(SATLiteral(17) - aux67 + SATLiteral(2)))
2 186 0
17 186 0
17 2 185 0
c ((SATLiteral(13) - aux68 + SATLiteral(8))<=0)
-8 -188 0
-13 -188 0
-13 -8 -189 0
c (0<=(SATLiteral(13) - aux68 + SATLiteral(8)))
8 189 0
13 189 0
13 8 188 0
c ((SATLiteral(18) - aux69 + SATLiteral(3))<=0)
-3 -191 0
-18 -191 0
-18 -3 -192 0
c (0<=(SATLiteral(18) - aux69 + SATLiteral(3)))
3 192 0
18 192 0
18 3 191 0
c ((SATLiteral(14) - aux70 + SATLiteral(9))<=0)
-9 -194 0
-14 -194 0
-14 -9 -195 0
c (0<=(SATLiteral(14) - aux70 + SATLiteral(9)))
9 195 0
14 195 0
14 9 194 0
c ((SATLiteral(19) - aux71 + SATLiteral(4))<=0)
-4 -197 0
-19 -197 0
-19 -4 -198 0
c (0<=(SATLiteral(19) - aux71 + SATLiteral(4)))
4 198 0
19 198 0
19 4 197 0
c ((SATLiteral(15) - aux72 + SATLiteral(10))<=0)
-10 -200 0
-15 -200 0
-15 -10 -201 0
c (0<=(SATLiteral(15) - aux72 + SATLiteral(10)))
10 201 0
15 201 0
15 10 200 0
c ((SATLiteral(20) - aux73 + SATLiteral(5))<=0)
-5 -203 0
-20 -203 0
-20 -5 -204 0
c (0<=(SATLiteral(20) - aux73 + SATLiteral(5)))
5 204 0
20 204 0
20 5 203 0
c ((SATLiteral(16) - aux74 + SATLiteral(11))<=0)
-11 -206 0
-16 -206 0
-16 -11 -207 0
c (0<=(SATLiteral(16) - aux74 + SATLiteral(11)))
11 207 0
16 207 0
16 11 206 0
c ((SATLiteral(21) - aux75 + SATLiteral(6))<=0)
-6 -209 0
-21 -209 0
-21 -6 -210 0
c (0<=(SATLiteral(21) - aux75 + SATLiteral(6)))
6 210 0
21 210 0
21 6 209 0
